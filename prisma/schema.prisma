// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum RecurrenceType {
  MONTHLY      @map("monthly")      // Tous les mois
  BIMONTHLY    @map("bimonthly")    // Tous les 2 mois
  QUARTERLY    @map("quarterly")     // Tous les 3 mois
  BIANNUAL     @map("biannual")     // Tous les 6 mois
  ANNUAL       @map("annual")        // Tous les ans
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  lastName  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  obligatoryExpenses ObligatoryExpense[]
  expenses         Expense[]
}

model ObligatoryExpense {
  id          String         @id @default(cuid())
  userId      String
  name        String
  amount      Int
  isArchived  Boolean       @default(false)
  archivedAt  DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  startDate   DateTime      // Date du premier prélèvement
  recurrence  RecurrenceType @default(MONTHLY)
  
  user        User          @relation(fields: [userId], references: [id])

  @@map("obligatory_expenses")
}

model Expense {
  id        String   @id @default(cuid())
  userId    String
  name      String
  amount    Int
  categoryId String?
  category CategoryExpense? @relation(fields: [categoryId], references: [id])
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
}

model Recipe {
  id        String   @id @default(cuid())
  userId    String
  name      String
  amount    Int
  date      DateTime
  categoryId String?
  category CategoryRecipe? @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CategoryExpense {
  id        String   @id @default(cuid())
  userId    String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expenses Expense[]
}

model CategoryRecipe {
  id        String   @id @default(cuid())
  userId    String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recipes Recipe[]
}

